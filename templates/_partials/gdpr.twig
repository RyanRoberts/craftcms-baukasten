{% cache globally using key 'klaro' %}
  {% set klaroSnippets = klaroSnippets.klaroSnippets.all() ?? null %}
  {% set purposes = klaroSnippets[0].snippetPurpose.options ?? null %}
{% endcache %}

{% for item in klaroSnippets if item.isActive %}
  {% set snippet = item.snippetCode %}
  {% set name = item.snippetName | camel %}
  {% set type = item.snippetRequired ? '' : 'opt-in' %}
  {{ snippet |replace({'src=': 'data-name="' ~ name ~ '" type="' ~ type ~ '" data-type="text/javascript" data-src='}) | raw }}
{% endfor %}


<script>
    function getCookie(name) {
        var value = "; " + document.cookie;
        var parts = value.split("; " + name + "=");
        if (parts.length === 2) return parts.pop().split(";").shift();
    }

    // Get klaro cookie
    var klaroCurrent;
    var klaroCookie;
    var klaroCallback = function (consent, app) {
        console.log("User consent for app " + app.name + ": consent=" + consent);
        cookieChanged()
    };

    var getKlaroCookie = function () {
        klaroCookie = getCookie('klaro');
    }

    var setCurrentCookie = function () {
        klaroCurrent = JSON.parse(klaroCookie);
    }

    getKlaroCookie()
    if (klaroCookie) {
        setCurrentCookie()
    }

    var klaroConfig = {
        elementID: 'klaro',
        cookieName: 'klaro',
        cookieExpiresAfterDays: 365,
        privacyPolicy: '/#privacy',
        lang: 'en',
        default: true,
        mustConsent: false,
        translations: {
            en: {
                consentModal: {
                    title: '{{ 'translate.klaro.consentModal.title' | t }}',
                    description: '{{ 'translate.klaro.consentModal.description' | t }}',
                    privacyPolicy: {
                        name: '{{ 'translate.klaro.privacyPolicy.name' | t }}',
                        text: '{{ 'translate.klaro.privacyPolicy.text' | t }}'
                    }
                },
                consentNotice: {
                    changeDescription: '{{ 'translate.klaro.consentNotice.changeDescription' | t }}',
                    description: '{{ 'translate.klaro.consentNotice.description' | t }}',
                    learnMore: '{{ 'translate.klaro.consentNotice.learnMore' | t }}'
                },
                privacyPolicy: {
                    text: '{{ 'translate.klaro.privacyPolicy.text' | t }}',
                    name: '{{ 'translate.klaro.privacyPolicy.name' | t }}',
                },
                ok: '{{ 'translate.klaro.ok' | t }}',
                save: '{{ 'translate.klaro.save' | t }}',
                decline: '{{ 'translate.klaro.decline' | t }}',
                close: '{{ 'translate.klaro.close' | t }}',
                app: {
                    disableAll: {
                        title: '{{ 'translate.klaro.app.disableAll.title' | t }}',
                        description: '{{ 'translate.klaro.app.disableAll.description' | t }}'
                    },
                    optOut: {
                        title: '{{ 'translate.klaro.app.optOut.title' | t }}',
                        description: '{{ 'translate.klaro.app.optOut.description' | t }}'
                    },
                    required: {
                        title: '{{ 'translate.klaro.app.required.title' | t }}',
                        description: '{{ 'translate.klaro.app.required.description' | t }}'
                    },
                    purposes: '{{ 'translate.klaro.app.purposes' | t }}',
                    purpose: '{{ 'translate.klaro.app.purpose' | t }}'
                },
                poweredBy: '{{ 'translate.klaro.poweredBy' | t }}',
                purposes: {
                  {% for purpose in purposes %}
                  {{ purpose.value ~ ': '}}{{ "'" | raw }}{{ purpose.label }}{{ "'," | raw }}
                  {% endfor %}
                },

                // Loop App Descriptions here from Backend
              {% for item in klaroSnippets if item.isActive %}
              {% set name = item.snippetName | camel %}
              {% set desc = item.snippetDescription %}
              {{ name ~ ": { description: " }}{{ "'" | raw }}{{ desc }}{{ "' }," | raw }}
              {% endfor %}
            },
        },

        apps: [
          {% for item in klaroSnippets if item.isActive %}
          {% set name = item.snippetName | camel %}
          {% set required = item.snippetRequired %}
          {% set snippetPurposes = [] %}
          {% for purpose in item.snippetPurpose %}
          {% set snippetPurposes = snippetPurposes | merge([purpose.value]) %}
          {% endfor %}
            {
                name: '{{ name }}',
                title: '{{ item.snippetName }}',
                default: {{ item.snippetDefaultState ? 1 : 0 }},
                required: {{ item.snippetRequired ? 1 : 0 }},
                purposes: [ '{{ snippetPurposes | join("','") | raw }}' ],
                callback: klaroCallback,
            },
          {% endfor %}
        ],
    };

    // Check if cookie settings changed
    // Reload page if changed
    function cookieChanged() {
        if (klaroCurrent) {
            var klaroNew = JSON.parse(getCookie('klaro'));
            if (JSON.stringify(klaroCurrent) !== JSON.stringify(klaroNew)) {
                location.reload();
            }
        }
    }
    {{ craft.twigpack.includeFile("@webroot/dist/js/klaro.js") }}


    window.addEventListener('load', function () {
        var buttons = document.querySelectorAll('.cn-ok .cm-btn-sm');
        if (buttons) {
            buttons.forEach(function (button) {
                button.addEventListener('click', function () {
                    location.reload();
                })
            })
        }
    })
</script>

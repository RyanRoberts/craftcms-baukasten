{#
Image Helper
------------------------------------------------------------

{% import '_macros/_macro-imageHelper.twig' as image  %}
#}

{% apply spaceless %}
  {# Get Image Extension #}
  {%- macro getImageExtension(image) -%}
    {%- if image ??? null -%}
      {%- if image is iterable -%}
        {{- image.extension | lower -}}
      {%- else -%}
        {{- image | split('.') | last | lower -}}
      {%- endif -%}
    {%- endif -%}
  {%- endmacro -%}



  {# Get Image Extension #}
  {%- macro isTransformable(image) -%}
    {%- set skipTransformsForThisExtensions = ['gif', 'tiff', 'svg'] -%}
    {%- set extension = _self.getImageExtension(image) -%}
    {%- if extension not in skipTransformsForThisExtensions -%}
      {{- true -}}
    {%- else -%}
      {{- false -}}
    {%- endif -%}
  {%- endmacro -%}



  {# Render Image #}
  {%- macro renderImage(image, transform, lazy, objectFit = null, calcDominantColor, simpleMarkup) -%}
    {% set lazy = lazy | default(true) %}
    {% set calcDominantColor = calcDominantColor | default(false) %}
    {% set simpleMarkup = simpleMarkup | default(false) %}

    {%- if image ??? null -%}
      {%- set placeholder = _self.getPlaceHolder(image, transform | default('landscape'), calcDominantColor) -%}
      {%- set focalpoint = image.getFocalpoint('asCss') -%}
      {%- set imageTitle = image.title -%}
      {% set isTransformable = _self.isTransformable(image) and not simpleMarkup %}
      {%- set imageUrl = image.getUrl() -%}
      {%- if isTransformable -%}
        {%- set srcsetLegacy = _self.getSrcset(image, transform) -%}
        {%- set srcset = _self.getSrcset(image, transform, 'webp') -%}
        {% set transformedRootImage = craft.imager.transformImage(image, transform)|last %}
      {%- endif -%}



      <img class="{{ lazy ? 'lazyload' : '' }}"
           data-type="{{- _self.getSourceFileExtension(image) -}}"
        {%- if objectFit -%}
          style="object-fit: {{ objectFit }}; object-position: {{ focalpoint | default('50% 50%') }}"
        {%- endif -%}
        {%- if lazy -%}
          src="{{- placeholder -}}"
          {%- if isTransformable -%}data-srcset="{{- srcset -}}"{%- else -%}data-src="{{- imageUrl -}}"{%- endif -%}
          data-sizes="auto"
        {%- else -%}
          {%- if isTransformable -%}srcset="{{- srcset -}}"{%- else -%}src="{{- imageUrl -}}"{%- endif -%}
          sizes="100vw"
        {%- endif -%}
        {%- if craft.app.config.general.custom.ieSupport and isTransformable -%}
          data-rootimage="{{- transformedRootImage.url -}}"
        {%- endif -%}
           alt="{{ imageTitle }}"/>
    {%- endif -%}
  {%- endmacro -%}



  {# Render NoScript #}
  {%- macro renderNoScript(image) -%}
    {%- if image ??? null -%}
      <noscript><img src="{{ image.getUrl() }}" alt="{{ image.title }}"/></noscript>
    {%- endif -%}
  {%- endmacro -%}


  {# Render SourceElement #}
  {%- macro renderSourceElement(srcSet, lazy, mediaQuery, type, image) -%}
    {%- if srcSet -%}
      <source data-type="{{- _self.getSourceFileExtension(image) -}}" {% if lazy %} data-sizes="auto" data-srcset="{{- srcSet -}}"
      {% else %}sizes="100vw" srcset="{{- srcSet -}}"{% endif %}
        {% if mediaQuery %}media="{{- mediaQuery -}}"{% endif %}
        {% if type %}type="{{- type -}}"{% endif %}/>
    {%- endif -%}
  {%- endmacro -%}



  {# Render Source #}
  {%- macro renderSource(image, transform, lazy, mediaQuery = null) -%}
    {% set lazy = lazy | default(true) %}
    {% set transform = transform | default('landscape') %}

    {# Handle Image #}
    {%- if image -%}
      {{- _self.renderSourceElement(_self.getSrcset(image, transform, 'webp'), lazy, mediaQuery, 'image/webp', image) -}}
    {%- endif -%}
  {%- endmacro -%}



  {# Get Source File Extension #}
  {%- macro getSourceFileExtension(image) -%}
    {%- if image and _self.isTransformable(image) -%}
      {%- set transformedImage = craft.imager.transformImage(image, 'dominantColor') -%}
      {{- transformedImage[0].source.extension | lower  -}}
    {%- else -%}
      {{- image.extension | lower  -}}
    {%- endif -%}
  {%- endmacro -%}



  {# Get srcSet #}
  {%- macro getSrcset(image, transform, format) -%}
    {%- if image and _self.isTransformable(image) -%}
      {{- craft.imager.srcset(
        craft.imager.transformImage(
          image, transform | default('landscape'), { format: format | default(null) }
        )
      ) | trim -}}
    {%- else -%}
      {{- image.url -}}
    {%- endif -%}
  {%- endmacro -%}



  {# Get Dominant Color #}
  {%- macro getDominantColor(image, calcDominantColor) -%}
    {% set calcDominantColor = calcDominantColor | default(false) %}
    {%- set dominantColor = 'transparent' -%}
    {%- if craft.app.config.general.custom.dominantColor -%}
      {%- set dominantColor = craft.app.config.general.custom.dominantColor -%}
    {%- endif -%}
    {% if calcDominantColor and not craft.app.config.general.custom.localDevPerformance and image.extension | lower == 'jpg' and _self.isTransformable(image) %}
      {# Create Mini Image for Dominant Color #}
      {%- set image = craft.imager.transformImage(image, 'dominantColor')|first -%}
      {%- set dominantColor = craft.imager.getDominantColor(image) -%}
    {% endif %}
    {{- dominantColor -}}
  {%- endmacro -%}



  {# Get Placeholder #}
  {%- macro getPlaceHolder(image, transform, calcDominantColor) -%}
    {% set calcDominantColor = calcDominantColor | default(false) %}
    {%- if image -%}
      {%- if _self.isTransformable(image) -%}
        {%- set transformedImage = craft.imager.transformImage(image, transform | default('landscape'))|first -%}
        {{- craft.imager.placeholder({
          color: _self.getDominantColor(transformedImage, calcDominantColor),
          width: transformedImage.width,
          height: transformedImage.height
        }) -}}
      {%- else -%}
        {{- craft.imager.placeholder({
          color: 'transparent',
          width: image.width,
          height: image.height,
        }) -}}
      {%- endif -%}
    {%- endif -%}
  {%- endmacro -%}
{%- endapply -%}

{#
  Pagination
  ==========
#}

{% macro pagination(pages,craft,props) %}
  {% set defaults = {
    cn: 'c-pagination',
    searchquery: false,
    pagenumber: 5,
    fistPageSign: '&laquo;',
    lastPageSign: '&raquo;',
    prevSign: '&lsaquo;',
    nextSign: '&rsaquo;',
    firstPageText: 'First Page',
    lastPageText: 'Last Page',
    prevText: 'Prev Page',
    nextText: 'Next Page',
    jumpText: 'Jump to Page:',
    removeCanonical: true,
    setNoindex: true
  } %}

  {# Merge Default with Options #}
  {% set props = props is defined ? defaults|merge(props) : defaults %}

  {# Add Pagination only if the Page Number is higher than 1#}
  {% if pages.totalPages > 1 %}
    <nav class="{{ props.cn }}" role="navigation">
      <div class="{{ props.cn ~ '__inner' }}">
        {# Dont display last page when on the first Page #}
        {% if pages.currentPage > 2 and pages.prevUrl %}
          <a class="{{ props.cn ~ '__link' }}  {{ props.cn ~ '__link--first' }}"
             data-link="{{ pages.firstUrl | base64enc }}" {{ props.searchquery ? 'data-search=?q=' ~ props.searchquery }}
             title="{{ props.firstPageText }}">{{ props.fistPageSign|raw }}</a>
        {% endif %}

        {# Display the Previous Link if available #}
        {% if pages.prevUrl %}
          <a class="{{ props.cn ~ '__link' }}  {{ props.cn ~ '__link--prev' }}"
             data-link="{{ pages.prevUrl | base64enc }}" {{ props.searchquery ? 'data-search=?q=' ~ props.searchquery }}
             title="{{ props.prevText }}">{{ props.prevSign|raw }}</a>
        {% endif %}

        {# With Pagenumber higher than zero the pagination will display pages #}
        {% if props.pagenumber > 0 %}
          {# Display prev 5 Page Links#}
          {% for page, url in pages.getPrevUrls(props.pagenumber) %}
            <a class="{{ props.cn ~ '__link' }}  {{ props.cn ~ '__link--number' }}"
               data-link="{{ url | base64enc }}" {{ props.searchquery ? 'data-search=?q=' ~ props.searchquery }}
               title="{{ props.jumpText }} {{ page }}">{{ page }}</a>
          {% endfor %}

          {# Diplay Current Page#}
          <span class="{{ props.cn ~ '__link' }}  {{ props.cn ~ '__link--current' }}">{{ pages.currentPage }}</span>

          {# Display next 5 Page Links #}
          {% for page, url in pages.getNextUrls(props.pagenumber) %}
            <a class="{{ props.cn ~ '__link' }}  {{ props.cn ~ '__link--number' }}"
               data-link="{{ url | base64enc }}" {{ props.searchquery ? 'data-search=?q=' ~ props.searchquery }}
               title="{{ props.jumpText }} {{ page }}">{{ page }}</a>
          {% endfor %}
        {% endif %}

        {# Display next Page Link if available#}
        {% if pages.nextUrl %}
          <a class="{{ props.cn ~ '__link' }}  {{ props.cn ~ '__link--next' }}"
             data-link="{{ pages.nextUrl | base64enc }}" {{ props.searchquery ? 'data-search=?q=' ~ props.searchquery }}
             title="{{ props.nextText }}">{{ props.nextSign|raw }}</a>
        {% endif %}

        {# Dont display when on the last page #}
        {% if (pages.totalPages - 1) > pages.currentPage and pages.totalPages > 2 %}
          <a class="{{ props.cn ~ '__link' }}  {{ props.cn ~ '__link--last' }}"
             data-link="{{ pages.lastUrl | base64enc }}" {{ props.searchquery ? 'data-search=?q=' ~ props.searchquery }}
             title="{{ props.lastPageText }}">{{ props.lastPageSign|raw }}</a>
        {% endif %}
      </div>
    </nav>

    <script>
      var pagination = document.querySelectorAll('.c-pagination');

      for (var i = 0, len = pagination.length; i < len; i++) {
        var links = pagination[i].querySelectorAll('a');

        for (var j = 0; j < links.length; j++) {
          var link = links[j];

          link.addEventListener('click', function (evt) {
            var link = evt.currentTarget;
            var base64url = link.dataset.link;
            var url = atob(base64url);
            var search = link.dataset.search;

            if (search) {
              window.location = url + search;
            } else {
              window.location = url;
            }
          });
        }
      }
    </script>
  {% endif %}
{% endmacro %}

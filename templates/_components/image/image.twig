{# Set Defaults #}
{% set defaults = {
  cn: 'c-image',
  modifiers: [],
  customClasses: [],
  data: {},
  js: null,
  image: null,
  transform: 'landscape',
  dominantColor: 'transparent',
  objectFit: null,
  lazy: true
} %}


{# Merge Default with Options #}
{% set props = props is defined ? defaults|merge(props) : defaults %}

{# Template for image transforms #}
{#{% extends "_components/image/_boilerplate/base-image-transform.twig" %}
{% block markup %}
  {% include '_components/image/_includes/_markupSelector.twig' %}
{% endblock %}#}

{# Macros #}
{% import '_macros/_macro-settings.twig' as module %}

{# Image #}
{% if props.image ??? null %}
  {% set image = props.image %}
{% endif %}

{% if image ??? null %}
  {# Skip Transforms for the current filetypes #}
  {% set skipTransformsForThisExtensions = ['gif', 'tiff', 'svg',] %}

  {% if image is iterable %}
    {% set extension = image.extension | lower %}
  {% else %}
    {% set extension = image | split('.') | last | lower %}
  {% endif %}

  {% if extension not in skipTransformsForThisExtensions %}

    {# Final Image Set #}
    {% set transformedImages = craft.imager.transformImage(image, props.transform) %}

    {# If the server has support for WebP, create transforms #}
    {% if craft.imager.serverSupportsWebp() %}
      {% set transformedImagesWebp = craft.imager.transformImage(image, props.transform, { format: 'webp' }) %}
    {% endif %}

    {# Domiant Color (Use lase image from Final images #}
    {% if props.dominantColor starts with '#' and extension != 'png' %}
      {% set dominantColor = props.dominantColor %}
    {% else %}
      {# (Use smallest image from final images) #}
      {% set dominantColorCalculation = craft.imager.getDominantColor(transformedImages|first) %}
      {% if dominantColorCalculation %}
        {% set dominantColor = dominantColorCalculation %}
      {% endif %}
    {% endif %}

    {# Placeholder #}
    {% set placeholderImage = craft.imager.placeholder({
      color: dominantColor,
      width: transformedImages|first.width,
      height: transformedImages|first.height
    }) %}
  {% else %}
    {% set placeholderImage = craft.imager.placeholder({
      color: dominantColor,
      width: image.width,
      height: image.height,
    }) %}
  {% endif %}

  <picture {{ module.settings(props) }} {% if props.dominantColor %}style="{{ 'background-color: ' ~ dominantColor ?? 'transparent' }}"{% endif %}>
    {% if extension not in skipTransformsForThisExtensions %}
      {# Transforming #}
      {% if craft.imager.serverSupportsWebp() %}
        <source data-sizes="auto"
                data-srcset="{{ craft.imager.srcset(transformedImagesWebp) }}"
                type="image/webp">
      {% endif %}
      {% include '_components/image/_transforming.twig' %}
    {% else %}
      {# No Transforming #}
      {% include '_components/image/_no-transforming.twig' %}
    {% endif %}
    <noscript><img src="{{ image.getUrl() }}" alt="{{ image.title }}"></noscript>
  </picture>
{% endif %}

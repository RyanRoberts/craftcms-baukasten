{#
  Description of what this file is for

  @package Baukasten
  @author David Hellmann [davidhellmann.com@gmail.com]

  o-contactForm
  ------------------------------------------------------------
#}

{# -- Set Defaults -- #}
{% set defaults = {
  cn: 'o-contactForm',
  modifiers: [],
  customClasses: [],
  data: {},
  vSpace: null,
  form: "contactFormEn"
} %}

{# -- Merge Default with Options -- #}
{% set opt = opt is defined ? defaults|merge(opt) : defaults %}

{# -- Macros -- #}
{% import '_partials/macros/_macro-settings.twig' as module %}

{# -- Modul -- #}
<div {{ module.settings(opt) }}>
  {% set form = craft.freeform.form(opt.form) %}
  <div class="m-freeform">
    {{ form.renderTag }}

    {% if form.pages|length > 1 %}
      <ul class="m-freeform-pages">
        {% for page in form.pages %}
          <li>
            {% if form.currentPage.index == page.index %}
              <b>{{ page.label }}</b>
            {% else %}
              {{ page.label }}
            {% endif %}
          </li>
        {% endfor %}
      </ul>
    {% endif %}

    {% for row in form %}
      <div class="m-freeform-row {{ form.customAttributes.rowClass }}">
        {% for field in row %}
          {% set columnClass = "m-freeform-column " ~ form.customAttributes.columnClass %}
          {% if field.type == "submit" %}
            {% set columnClass = columnClass ~ " m-freeform-column-content-align-" ~ field.position %}
          {% endif %}
          <div class="{{ columnClass }}"{{ field.rulesHtmlData }}>
            {{ field.render({
              class: field.type != "submit" ? "m-freeform-input" : "m-freeform-submit  c-button c-button--torch-red",
              labelClass: "m-freeform-label" ~ (field.inputOnly ? " m-freeform-input-only-label" : "") ~ (field.required ? " m-freeform-required" : ""),
              errorClass: "m-freeform-errors",
              instructionsClass: "m-freeform-instructions",
              useRequiredAttribute: true,
              inputAttributes: { "data-required-text": field.required ? "" | t : "(Optional)" | t }
            }) }}

            {# -- Add Select Button -- #}
            {% if field.type == "select" %}
              <svg class="c-svgSprite c-svgSprite--icon_arrow_right" viewbox="0 0 100 100">
                <use xlink:href="/assets/images/svg/sprite/sprite.svg#icon_arrow_right"></use>
              </svg>
            {% endif %}

            {# FOR FREEFORM PAYMENTS #}
            {% if field.layoutRows is defined %}
              {% for layoutRow in field.layoutRows %}
                <div class="m-freeform-row {{ form.customAttributes.rowClass }}">
                  {% for layoutField in layoutRow %}
                    <div class="{{ columnClass }}">
                      {{ layoutField.render({
                        class: "m-freeform-input",
                        labelClass: "m-freeform-label" ~ (layoutField.inputOnly ? " m-freeform-input-only-label" : "") ~ (layoutField.required ? " m-freeform-required" : ""),
                        errorClass: "m-freeform-errors",
                        instructionsClass: "m-freeform-instructions",
                        useRequiredAttribute: true,
                        inputAttributes: { "data-required-text": layoutField.required ? "" | t : "(Optional)" | t }
                      }) }}
                    </div>
                  {% endfor %}
                </div>
              {% endfor %}
            {% endif %}

          </div>
        {% endfor %}
      </div>
    {% endfor %}

    {% if form.hasErrors %}
      <div class="m-freeform-form-has-errors">
        {{ "Error! Please review the form and try submitting again."|t('freeform') }}

        {% if form.errors|length %}
          <ul>
            {% for error in form.errors %}
              <li>{{ error }}</li>
            {% endfor %}
          </ul>
        {% endif %}
      </div>
    {% endif %}

    {{ form.renderClosingTag }}
  </div>

  <script>
    var form = document.querySelector('[data-id="{{ form.anchor }}"]');
    if (form) {
      form.addEventListener("flatpickr-ready", (event) => {
        var instance = event.detail;
        var input = instance.input;

        input.parentNode.classList.add("m-freeform-input");
      });

      form.addEventListener("freeform-stripe-styling", (event) => {
        event.detail.base = {
          fontSize: "16px",
          fontFamily: "-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\"",
        }
      });

      // Custom David
      // Get Required / Not Required Text from Field and set it to the label set it via CSS after
      var labels = form.querySelectorAll('.m-freeform-label');
      if (labels) {
        labels.forEach(function(label) {
          var el = label.nextElementSibling;
          if (el.hasAttribute('data-required-text')) {
            label.setAttribute('data-required-text', el.getAttribute('data-required-text'))
          }
        });
      }
    }
  </script>
</div>
